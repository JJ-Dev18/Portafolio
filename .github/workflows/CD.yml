name: Continuous Deployment (CD)

on:
  workflow_run:
    workflows: ["Continuous Integration (CI)"]
    # Execute the workflow once the CI workflow is completed on main branch.
    types: [completed]
    branches:
      - main

jobs:
  deploy:
    # Defines the type of runner the job runs on
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the repository
        uses: actions/checkout@v3

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"

      # Consider this as an add on to optimize the execution of actions
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            
      - name: Install and Build ðŸ”§ # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          npm install --force
          CI=false npm run-script build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          CI: false

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          BRANCH: production
          FOLDER: build
